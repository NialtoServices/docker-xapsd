name: Docker Containers
on:
  workflow_dispatch:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+
env:
  IMAGE: nialtoservices/xapsd
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/386
          - linux/amd64
          - linux/arm64
          - linux/arm/v7
          - linux/arm/v6
          - linux/ppc64le
          - linux/s390x
    steps:
      - name: Extract metadata
        uses: docker/metadata-action@v5
        id: meta
        with:
          images: ghcr.io/${{ env.IMAGE }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Authenticate with the GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}
      - name: Build and push by digest
        uses: docker/build-push-action@v6
        id: build
        with:
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: |
            type=image,name=ghcr.io/${{ env.IMAGE }},name-canonical=true,push=true,push-by-digest=true
      - name: Prepare digest
        run: |
          PLATFORM="${{ matrix.platform }}"
          DIGEST="${{ steps.build.outputs.digest }}"
          echo "DIGEST_NAME=digests-${PLATFORM//\//-}" >> $GITHUB_ENV
          mkdir -p /tmp/digests
          touch /tmp/digests/${DIGEST#sha256:}
      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.DIGEST_NAME }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1
  merge:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true
      - name: Extract metadata
        uses: docker/metadata-action@v5
        id: meta
        with:
          images: ghcr.io/${{ env.IMAGE }}
          tags: |
            type=semver,pattern={{major}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{version}}
            type=sha
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Authenticate with the GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}
      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create \
            $(echo -n "$DOCKER_METADATA_OUTPUT_JSON" | jq -cr '.tags | map("-t " + .) | join(" ")') \
            $(printf 'ghcr.io/${{ env.IMAGE }}@sha256:%s ' *)
      - name: Inspect manifest list
        run: |
          docker buildx imagetools inspect \
            ghcr.io/${{ env.IMAGE }}:${{ steps.meta.outputs.version }}
